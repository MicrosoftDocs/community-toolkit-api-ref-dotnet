<Type Name="ColorNode" FullName="CommunityToolkit.WinUI.Animations.Expressions.ColorNode">
  <TypeSignature Language="C#" Value="public sealed class ColorNode : CommunityToolkit.WinUI.Animations.Expressions.ExpressionNode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColorNode extends CommunityToolkit.WinUI.Animations.Expressions.ExpressionNode" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Animations.Expressions.ColorNode" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColorNode&#xA;Inherits ExpressionNode" />
  <TypeSignature Language="F#" Value="type ColorNode = class&#xA;    inherit ExpressionNode" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Animations</AssemblyName>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.WinUI.Animations.Expressions.ExpressionNode</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Class ColorNode. This class cannot be inherited.
            </summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:CommunityToolkit.WinUI.Animations.Expressions.ExpressionNode" />
  </Docs>
  <Members>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected internal override string GetValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance string GetValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Animations.Expressions.ColorNode.GetValue" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetValue () As String" />
      <MemberSignature Language="F#" Value="override this.GetValue : unit -&gt; string" Usage="colorNode.GetValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Animations</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the value.
            </summary>
        <returns>System.String.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Animations.Expressions.BooleanNode operator == (CommunityToolkit.WinUI.Animations.Expressions.ColorNode left, CommunityToolkit.WinUI.Animations.Expressions.ColorNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.Animations.Expressions.BooleanNode op_Equality(class CommunityToolkit.WinUI.Animations.Expressions.ColorNode left, class CommunityToolkit.WinUI.Animations.Expressions.ColorNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Animations.Expressions.ColorNode.op_Equality(CommunityToolkit.WinUI.Animations.Expressions.ColorNode,CommunityToolkit.WinUI.Animations.Expressions.ColorNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ColorNode, right As ColorNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member ( = ) : CommunityToolkit.WinUI.Animations.Expressions.ColorNode * CommunityToolkit.WinUI.Animations.Expressions.ColorNode -&gt; CommunityToolkit.WinUI.Animations.Expressions.BooleanNode" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Animations</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.Animations.Expressions.ColorNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.Animations.Expressions.ColorNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the == operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator CommunityToolkit.WinUI.Animations.Expressions.ColorNode (Windows.UI.Color value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.Animations.Expressions.ColorNode op_Implicit(valuetype Windows.UI.Color value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Animations.Expressions.ColorNode.op_Implicit(Windows.UI.Color)~CommunityToolkit.WinUI.Animations.Expressions.ColorNode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As Color) As ColorNode" />
      <MemberSignature Language="F#" Value="static member op_Implicit : Windows.UI.Color -&gt; CommunityToolkit.WinUI.Animations.Expressions.ColorNode" Usage="CommunityToolkit.WinUI.Animations.Expressions.ColorNode.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Animations</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Animations.Expressions.ColorNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="Windows.UI.Color" />
      </Parameters>
      <Docs>
        <param name="value">The value.</param>
        <summary>
            Performs an implicit conversion from <see cref="T:Color" /> to <see cref="T:CommunityToolkit.WinUI.Animations.Expressions.ColorNode" />.
            </summary>
        <returns>The result of the conversion.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.Animations.Expressions.BooleanNode operator != (CommunityToolkit.WinUI.Animations.Expressions.ColorNode left, CommunityToolkit.WinUI.Animations.Expressions.ColorNode right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CommunityToolkit.WinUI.Animations.Expressions.BooleanNode op_Inequality(class CommunityToolkit.WinUI.Animations.Expressions.ColorNode left, class CommunityToolkit.WinUI.Animations.Expressions.ColorNode right) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Animations.Expressions.ColorNode.op_Inequality(CommunityToolkit.WinUI.Animations.Expressions.ColorNode,CommunityToolkit.WinUI.Animations.Expressions.ColorNode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ColorNode, right As ColorNode) As BooleanNode" />
      <MemberSignature Language="F#" Value="static member op_Inequality : CommunityToolkit.WinUI.Animations.Expressions.ColorNode * CommunityToolkit.WinUI.Animations.Expressions.ColorNode -&gt; CommunityToolkit.WinUI.Animations.Expressions.BooleanNode" Usage="CommunityToolkit.WinUI.Animations.Expressions.ColorNode.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Animations</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.Animations.Expressions.BooleanNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="CommunityToolkit.WinUI.Animations.Expressions.ColorNode" />
        <Parameter Name="right" Type="CommunityToolkit.WinUI.Animations.Expressions.ColorNode" />
      </Parameters>
      <Docs>
        <param name="left">The left.</param>
        <param name="right">The right.</param>
        <summary>
            Implements the != operator.
            </summary>
        <returns>The result of the operator.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
