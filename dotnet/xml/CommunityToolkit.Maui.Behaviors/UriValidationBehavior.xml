<Type Name="UriValidationBehavior" FullName="CommunityToolkit.Maui.Behaviors.UriValidationBehavior">
  <TypeSignature Language="C#" Value="public class UriValidationBehavior : CommunityToolkit.Maui.Behaviors.TextValidationBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UriValidationBehavior extends CommunityToolkit.Maui.Behaviors.TextValidationBehavior" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Maui.Behaviors.UriValidationBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class UriValidationBehavior&#xA;Inherits TextValidationBehavior" />
  <TypeSignature Language="F#" Value="type UriValidationBehavior = class&#xA;    inherit TextValidationBehavior" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.Maui.Behaviors.TextValidationBehavior</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.DynamicallyAccessedMembers(System.Diagnostics.CodeAnalysis.DynamicallyAccessedMemberTypes.All)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("UriValidationBehavior is not trim safe because it uses bindings with string paths.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.CodeAnalysis.RequiresUnreferencedCode("UriValidationBehavior is not trim safe because it uses bindings with string paths.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            The <see cref="T:CommunityToolkit.Maui.Behaviors.UriValidationBehavior" /> is a behavior that allows users to determine whether or not text input is a valid URI. For example, an <see cref="T:Microsoft.Maui.Controls.Entry" /> control can be styled differently depending on whether a valid or an invalid URI is provided. Additional properties handling validation are inherited from <see cref="T:CommunityToolkit.Maui.Behaviors.ValidationBehavior" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UriValidationBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Behaviors.UriValidationBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriKind">
      <MemberSignature Language="C#" Value="public UriKind UriKind { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.UriKind UriKind" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Maui.Behaviors.UriValidationBehavior.UriKind" />
      <MemberSignature Language="VB.NET" Value="Public Property UriKind As UriKind" />
      <MemberSignature Language="F#" Value="member this.UriKind : UriKind with get, set" Usage="CommunityToolkit.Maui.Behaviors.UriValidationBehavior.UriKind" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UriKind</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Provides an enumerated value that specifies how to handle different URI types. This is a bindable property.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UriKindProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.Maui.Controls.BindableProperty UriKindProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.Maui.Controls.BindableProperty UriKindProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.Maui.Behaviors.UriValidationBehavior.UriKindProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UriKindProperty As BindableProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable UriKindProperty : Microsoft.Maui.Controls.BindableProperty" Usage="CommunityToolkit.Maui.Behaviors.UriValidationBehavior.UriKindProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Maui.Controls.BindableProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Backing BindableProperty for the <see cref="P:CommunityToolkit.Maui.Behaviors.UriValidationBehavior.UriKind" /> property.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAsync">
      <MemberSignature Language="C#" Value="protected override System.Threading.Tasks.ValueTask&lt;bool&gt; ValidateAsync (string? value, System.Threading.CancellationToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;bool&gt; ValidateAsync(string value, valuetype System.Threading.CancellationToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Behaviors.UriValidationBehavior.ValidateAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateAsync (value As String, token As CancellationToken) As ValueTask(Of Boolean)" />
      <MemberSignature Language="F#" Value="override this.ValidateAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;bool&gt;" Usage="uriValidationBehavior.ValidateAsync (value, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="token" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="token">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
