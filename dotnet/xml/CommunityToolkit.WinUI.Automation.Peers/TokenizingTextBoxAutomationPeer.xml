<Type Name="TokenizingTextBoxAutomationPeer" FullName="CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer">
  <TypeSignature Language="C#" Value="public class TokenizingTextBoxAutomationPeer : Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer, Microsoft.UI.Xaml.Automation.Provider.IValueProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TokenizingTextBoxAutomationPeer extends Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer implements class Microsoft.UI.Xaml.Automation.Provider.IValueProvider" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer" />
  <TypeSignature Language="VB.NET" Value="Public Class TokenizingTextBoxAutomationPeer&#xA;Inherits ListViewBaseAutomationPeer&#xA;Implements IValueProvider" />
  <TypeSignature Language="F#" Value="type TokenizingTextBoxAutomationPeer = class&#xA;    inherit ListViewBaseAutomationPeer&#xA;    interface IValueProvider" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.UI.Xaml.Automation.Peers.ListViewBaseAutomationPeer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.UI.Xaml.Automation.Provider.IValueProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Defines a framework element automation peer for the <see cref="T:CommunityToolkit.WinUI.Controls.TokenizingTextBox" /> control.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TokenizingTextBoxAutomationPeer (CommunityToolkit.WinUI.Controls.TokenizingTextBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CommunityToolkit.WinUI.Controls.TokenizingTextBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.#ctor(CommunityToolkit.WinUI.Controls.TokenizingTextBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As TokenizingTextBox)" />
      <MemberSignature Language="F#" Value="new CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer : CommunityToolkit.WinUI.Controls.TokenizingTextBox -&gt; CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer" Usage="new CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer owner" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="CommunityToolkit.WinUI.Controls.TokenizingTextBox" />
      </Parameters>
      <Docs>
        <param name="owner">
            The <see cref="T:CommunityToolkit.WinUI.Controls.TokenizingTextBox" /> that is associated with this <see cref="T:CommunityToolkit.WinUI.UI.Automation.Peers.TokenizingTextBoxAutomationPeer" />.
            </param>
        <summary>
            Initializes a new instance of the <see cref="T:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IList&lt;Microsoft.UI.Xaml.Automation.Peers.AutomationPeer&gt; GetChildrenCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Microsoft.UI.Xaml.Automation.Peers.AutomationPeer&gt; GetChildrenCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.GetChildrenCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetChildrenCore () As IList(Of AutomationPeer)" />
      <MemberSignature Language="F#" Value="override this.GetChildrenCore : unit -&gt; System.Collections.Generic.IList&lt;Microsoft.UI.Xaml.Automation.Peers.AutomationPeer&gt;" Usage="tokenizingTextBoxAutomationPeer.GetChildrenCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.UI.Xaml.Automation.Peers.AutomationPeer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets the collection of elements that are represented in the UI Automation tree as immediate
            child elements of the automation peer.
            </summary>
        <returns>The children elements.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassNameCore">
      <MemberSignature Language="C#" Value="protected override string GetClassNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetClassNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.GetClassNameCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetClassNameCore () As String" />
      <MemberSignature Language="F#" Value="override this.GetClassNameCore : unit -&gt; string" Usage="tokenizingTextBoxAutomationPeer.GetClassNameCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called by GetClassName that gets a human readable name that, in addition to AutomationControlType,
            differentiates the control represented by this AutomationPeer.
            </summary>
        <returns>The string that contains the name.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameCore">
      <MemberSignature Language="C#" Value="protected override string GetNameCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetNameCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.GetNameCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetNameCore () As String" />
      <MemberSignature Language="F#" Value="override this.GetNameCore : unit -&gt; string" Usage="tokenizingTextBoxAutomationPeer.GetNameCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Called by GetName.
            </summary>
        <returns>
            Returns the first of these that is not null or empty:
            - Value returned by the base implementation
            - Name of the owning TokenizingTextBox
            - TokenizingTextBox class name
            </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPatternCore">
      <MemberSignature Language="C#" Value="protected override object GetPatternCore (Microsoft.UI.Xaml.Automation.Peers.PatternInterface patternInterface);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object GetPatternCore(valuetype Microsoft.UI.Xaml.Automation.Peers.PatternInterface patternInterface) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.GetPatternCore(Microsoft.UI.Xaml.Automation.Peers.PatternInterface)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetPatternCore (patternInterface As PatternInterface) As Object" />
      <MemberSignature Language="F#" Value="override this.GetPatternCore : Microsoft.UI.Xaml.Automation.Peers.PatternInterface -&gt; obj" Usage="tokenizingTextBoxAutomationPeer.GetPatternCore patternInterface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="patternInterface" Type="Microsoft.UI.Xaml.Automation.Peers.PatternInterface" />
      </Parameters>
      <Docs>
        <param name="patternInterface">A value from the Windows.UI.Xaml.Automation.Peers.PatternInterface enumeration.</param>
        <summary>
            Gets the control pattern that is associated with the specified Windows.UI.Xaml.Automation.Peers.PatternInterface.
            </summary>
        <returns>The object that supports the specified pattern, or null if unsupported.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.UI.Xaml.Automation.Provider.IValueProvider.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the value of a control is read-only.</summary>
        <value>**true** if the value is read-only; **false** if it can be modified.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.SetValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As String)" />
      <MemberSignature Language="F#" Value="override this.SetValue : string -&gt; unit" Usage="tokenizingTextBoxAutomationPeer.SetValue value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.UI.Xaml.Automation.Provider.IValueProvider.SetValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The value to set. The provider is responsible for converting the value to the appropriate data type.</param>
        <summary>Sets the value of a control.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:ElementNotEnabledException">Thrown if the control is in a read-only state.</exception>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As String" />
      <MemberSignature Language="F#" Value="member this.Value : string" Usage="CommunityToolkit.WinUI.Automation.Peers.TokenizingTextBoxAutomationPeer.Value" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.UI.Xaml.Automation.Provider.IValueProvider.Value</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.TokenizingTextBox</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value of the control.</summary>
        <value>The value of the control.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
