<Type Name="AccentColorConverter" FullName="CommunityToolkit.WinUI.Controls.AccentColorConverter">
  <TypeSignature Language="C#" Value="public class AccentColorConverter : Microsoft.UI.Xaml.Data.IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AccentColorConverter extends System.Object implements class Microsoft.UI.Xaml.Data.IValueConverter" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.Controls.AccentColorConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class AccentColorConverter&#xA;Implements IValueConverter" />
  <TypeSignature Language="F#" Value="type AccentColorConverter = class&#xA;    interface IValueConverter" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Controls.ColorPicker</AssemblyName>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.UI.Xaml.Data.IValueConverter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Creates an accent color for a base color value.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AccentColorConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Controls.AccentColorConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.ColorPicker</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Controls.AccentColorConverter.Convert(System.Object,System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, language As String) As Object" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * string -&gt; obj&#xA;override this.Convert : obj * Type * obj * string -&gt; obj" Usage="accentColorConverter.Convert (value, targetType, parameter, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.UI.Xaml.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.ColorPicker</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="language">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, string language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Controls.AccentColorConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, language As String) As Object" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * string -&gt; obj&#xA;override this.ConvertBack : obj * Type * obj * string -&gt; obj" Usage="accentColorConverter.ConvertBack (value, targetType, parameter, language)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.UI.Xaml.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.ColorPicker</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="targetType">To be added.</param>
        <param name="parameter">To be added.</param>
        <param name="language">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="GetAccent">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.HsvColor GetAccent (CommunityToolkit.WinUI.HsvColor hsvColor, int accentStep);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CommunityToolkit.WinUI.HsvColor GetAccent(valuetype CommunityToolkit.WinUI.HsvColor hsvColor, int32 accentStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.Controls.AccentColorConverter.GetAccent(CommunityToolkit.WinUI.HsvColor,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAccent (hsvColor As HsvColor, accentStep As Integer) As HsvColor" />
      <MemberSignature Language="F#" Value="static member GetAccent : CommunityToolkit.WinUI.HsvColor * int -&gt; CommunityToolkit.WinUI.HsvColor" Usage="CommunityToolkit.WinUI.Controls.AccentColorConverter.GetAccent (hsvColor, accentStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.ColorPicker</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.HsvColor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hsvColor" Type="CommunityToolkit.WinUI.HsvColor" />
        <Parameter Name="accentStep" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hsvColor">The base color to calculate the accent from.</param>
        <param name="accentStep">The number of accent color steps to move.</param>
        <summary>
            This does not account for perceptual differences and also does not match with
            system accent color calculation.
            </summary>
        <returns>The new accent color.</returns>
        <remarks>
            Use the HSV representation as it's more perceptual.
            In most cases only the value is changed by a fixed percentage so the algorithm is reproducible.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueDelta">
      <MemberSignature Language="C#" Value="public const double ValueDelta = 0.1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float64 ValueDelta = (0.1)" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.Controls.AccentColorConverter.ValueDelta" />
      <MemberSignature Language="VB.NET" Value="Public Const ValueDelta As Double  = 0.1" />
      <MemberSignature Language="F#" Value="val mutable ValueDelta : double" Usage="CommunityToolkit.WinUI.Controls.AccentColorConverter.ValueDelta" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Controls.ColorPicker</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <MemberValue>0.1</MemberValue>
      <Docs>
        <summary>
            The amount to change the Value channel for each accent color step.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
