<Type Name="EnumToBoolConverter" FullName="CommunityToolkit.Maui.Converters.EnumToBoolConverter">
  <TypeSignature Language="C#" Value="public class EnumToBoolConverter : CommunityToolkit.Maui.Converters.BaseConverterOneWay&lt;Enum,bool,Enum&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EnumToBoolConverter extends CommunityToolkit.Maui.Converters.BaseConverterOneWay`3&lt;class System.Enum, bool, class System.Enum&gt;" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Maui.Converters.EnumToBoolConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class EnumToBoolConverter&#xA;Inherits BaseConverterOneWay(Of Enum, Boolean, Enum)" />
  <TypeSignature Language="F#" Value="type EnumToBoolConverter = class&#xA;    inherit BaseConverterOneWay&lt;Enum, bool, Enum&gt;" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.Maui.Converters.BaseConverterOneWay&lt;System.Enum,System.Boolean,System.Enum&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFrom">System.Enum</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTo">System.Boolean</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TParam">System.Enum</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Maui.Controls.Xaml.AcceptEmptyServiceProvider]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Maui.Controls.Xaml.AcceptEmptyServiceProvider&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 2 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 2 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
                Convert an <see cref="T:System.Enum" /> to corresponding <see cref="T:System.Boolean" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnumToBoolConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Converters.EnumToBoolConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override bool ConvertFrom (Enum value, Enum? parameter = default, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ConvertFrom(class System.Enum value, class System.Enum parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Converters.EnumToBoolConverter.ConvertFrom(System.Enum,System.Enum,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (value As Enum, Optional parameter As Enum = Nothing, Optional culture As CultureInfo = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : Enum * Enum * System.Globalization.CultureInfo -&gt; bool" Usage="enumToBoolConverter.ConvertFrom (value, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Enum">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="parameter" Type="System.Enum" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Enum" /> value to convert</param>
        <param name="parameter">
                Additional parameter for converter. Can be used for comparison instead of
                <see cref="P:CommunityToolkit.Maui.Converters.EnumToBoolConverter.TrueValues" /></param>
        <param name="culture">The culture to use in the converter. This is not implemented.</param>
        <summary>
                Convert an <see cref="T:System.Enum" /> to corresponding <see cref="T:System.Boolean" /></summary>
        <returns>
                False, if the value is not in <see cref="P:CommunityToolkit.Maui.Converters.EnumToBoolConverter.TrueValues" />. False, if <see cref="P:CommunityToolkit.Maui.Converters.EnumToBoolConverter.TrueValues" /> is empty and
                value not equal to parameter.
            </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">If value is not an <see cref="T:System.Enum" /></exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultConvertReturnValue">
      <MemberSignature Language="C#" Value="public override bool DefaultConvertReturnValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultConvertReturnValue" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Maui.Converters.EnumToBoolConverter.DefaultConvertReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultConvertReturnValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.DefaultConvertReturnValue : bool with get, set" Usage="CommunityToolkit.Maui.Converters.EnumToBoolConverter.DefaultConvertReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="TrueValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Enum&gt; TrueValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Enum&gt; TrueValues" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Maui.Converters.EnumToBoolConverter.TrueValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrueValues As IList(Of Enum)" />
      <MemberSignature Language="F#" Value="member this.TrueValues : System.Collections.Generic.IList&lt;Enum&gt;" Usage="CommunityToolkit.Maui.Converters.EnumToBoolConverter.TrueValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Enum&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
                Enum values, that converts to <c>true</c> (optional)
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
