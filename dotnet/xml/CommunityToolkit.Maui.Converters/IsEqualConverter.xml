<Type Name="IsEqualConverter" FullName="CommunityToolkit.Maui.Converters.IsEqualConverter">
  <TypeSignature Language="C#" Value="public class IsEqualConverter : CommunityToolkit.Maui.Converters.BaseConverterOneWay&lt;object,bool,object&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IsEqualConverter extends CommunityToolkit.Maui.Converters.BaseConverterOneWay`3&lt;object, bool, object&gt;" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Maui.Converters.IsEqualConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class IsEqualConverter&#xA;Inherits BaseConverterOneWay(Of Object, Boolean, Object)" />
  <TypeSignature Language="F#" Value="type IsEqualConverter = class&#xA;    inherit BaseConverterOneWay&lt;obj, bool, obj&gt;" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Maui</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.Maui.Converters.BaseConverterOneWay&lt;System.Object,System.Boolean,System.Object&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TFrom">System.Object</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TTo">System.Boolean</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TParam">System.Object</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Microsoft.Maui.Controls.Xaml.AcceptEmptyServiceProvider]</AttributeName>
      <AttributeName Language="F#">[&lt;Microsoft.Maui.Controls.Xaml.AcceptEmptyServiceProvider&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2, 2 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 2, 2 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Checks whether the incoming value equals the provided parameter.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IsEqualConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Converters.IsEqualConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override bool ConvertFrom (object? value, object? parameter, System.Globalization.CultureInfo? culture = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ConvertFrom(object value, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Converters.IsEqualConverter.ConvertFrom(System.Object,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (value As Object, parameter As Object, Optional culture As CultureInfo = Nothing) As Boolean" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : obj * obj * System.Globalization.CultureInfo -&gt; bool" Usage="isEqualConverter.ConvertFrom (value, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">The first object to compare.</param>
        <param name="parameter">The second object to compare.</param>
        <param name="culture">The culture to use in the converter. This is not implemented.</param>
        <summary>
            Checks whether the incoming value doesn't equal the provided parameter.
            </summary>
        <returns>True if <paramref name="value" /> and <paramref name="parameter" /> are equal, False if they are not equal.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultConvertReturnValue">
      <MemberSignature Language="C#" Value="public override bool DefaultConvertReturnValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultConvertReturnValue" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Maui.Converters.IsEqualConverter.DefaultConvertReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultConvertReturnValue As Boolean" />
      <MemberSignature Language="F#" Value="member this.DefaultConvertReturnValue : bool with get, set" Usage="CommunityToolkit.Maui.Converters.IsEqualConverter.DefaultConvertReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
