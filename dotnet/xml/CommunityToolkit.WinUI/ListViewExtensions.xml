<Type Name="ListViewExtensions" FullName="CommunityToolkit.WinUI.ListViewExtensions">
  <TypeSignature Language="C#" Value="public static class ListViewExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ListViewExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.WinUI.ListViewExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ListViewExtensions" />
  <TypeSignature Language="F#" Value="type ListViewExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
    <AssemblyVersion>8.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Provides attached dependency properties for the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AlternateColor">
      <MemberSignature Language="C#" Value="see GetAlternateColor, and SetAlternateColor" />
      <MemberSignature Language="ILAsm" Value="see GetAlternateColor, and SetAlternateColor" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.ListViewExtensions.AlternateColor" />
      <MemberSignature Language="VB.NET" Value="see GetAlternateColor, and SetAlternateColor" />
      <MemberSignature Language="F#" Value="see GetAlternateColor, and SetAlternateColor" Usage="see GetAlternateColor, and SetAlternateColor" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateColorProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty AlternateColorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty AlternateColorProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.ListViewExtensions.AlternateColorProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly AlternateColorProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable AlternateColorProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.ListViewExtensions.AlternateColorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Attached <see cref="T:Microsoft.UI.Xaml.DependencyProperty" /> for binding a <see cref="T:Microsoft.UI.Xaml.Media.Brush" /> as an alternate background color to a <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateItemTemplate">
      <MemberSignature Language="C#" Value="see GetAlternateItemTemplate, and SetAlternateItemTemplate" />
      <MemberSignature Language="ILAsm" Value="see GetAlternateItemTemplate, and SetAlternateItemTemplate" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.ListViewExtensions.AlternateItemTemplate" />
      <MemberSignature Language="VB.NET" Value="see GetAlternateItemTemplate, and SetAlternateItemTemplate" />
      <MemberSignature Language="F#" Value="see GetAlternateItemTemplate, and SetAlternateItemTemplate" Usage="see GetAlternateItemTemplate, and SetAlternateItemTemplate" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternateItemTemplateProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty AlternateItemTemplateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty AlternateItemTemplateProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.ListViewExtensions.AlternateItemTemplateProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly AlternateItemTemplateProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable AlternateItemTemplateProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.ListViewExtensions.AlternateItemTemplateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Attached <see cref="T:Microsoft.UI.Xaml.DependencyProperty" /> for binding a <see cref="T:Microsoft.UI.Xaml.DataTemplate" /> as an alternate template to a <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="see GetCommand, and SetCommand" />
      <MemberSignature Language="ILAsm" Value="see GetCommand, and SetCommand" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.ListViewExtensions.Command" />
      <MemberSignature Language="VB.NET" Value="see GetCommand, and SetCommand" />
      <MemberSignature Language="F#" Value="see GetCommand, and SetCommand" Usage="see GetCommand, and SetCommand" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.ListViewExtensions.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.ListViewExtensions.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Attached <see cref="T:Microsoft.UI.Xaml.DependencyProperty" /> for binding an <see cref="T:System.Windows.Input.ICommand" /> to handle ListViewBase Item interaction by means of <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> ItemClick event. ListViewBase IsItemClickEnabled must be set to true.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeselectAll">
      <MemberSignature Language="C#" Value="public static void DeselectAll (this Microsoft.UI.Xaml.Controls.ListViewBase list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeselectAll(class Microsoft.UI.Xaml.Controls.ListViewBase list) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.DeselectAll(Microsoft.UI.Xaml.Controls.ListViewBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DeselectAll (list As ListViewBase)" />
      <MemberSignature Language="F#" Value="static member DeselectAll : Microsoft.UI.Xaml.Controls.ListViewBase -&gt; unit" Usage="CommunityToolkit.WinUI.ListViewExtensions.DeselectAll list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Microsoft.UI.Xaml.Controls.ListViewBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="list">
          <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" />
        </param>
        <summary>
            Deselects all items in list.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeselectItem&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void DeselectItem&lt;T&gt; (this Microsoft.UI.Xaml.Controls.ListViewBase list, T item) where T : Microsoft.UI.Xaml.DependencyObject;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeselectItem&lt;(class Microsoft.UI.Xaml.DependencyObject) T&gt;(class Microsoft.UI.Xaml.Controls.ListViewBase list, !!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.DeselectItem``1(Microsoft.UI.Xaml.Controls.ListViewBase,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub DeselectItem(Of T As DependencyObject) (list As ListViewBase, item As T)" />
      <MemberSignature Language="F#" Value="static member DeselectItem : Microsoft.UI.Xaml.Controls.ListViewBase * 'T -&gt; unit (requires 'T :&gt; Microsoft.UI.Xaml.DependencyObject)" Usage="CommunityToolkit.WinUI.ListViewExtensions.DeselectItem (list, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <InterfaceName>Microsoft.UI.Xaml.DependencyObject</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="list" Type="Microsoft.UI.Xaml.Controls.ListViewBase" RefType="this" />
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Type of item.</typeparam>
        <param name="list">
          <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" />
        </param>
        <param name="item">Item to deselect.</param>
        <summary>
            Deselects the provided item.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlternateColor">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.Media.Brush GetAlternateColor (Microsoft.UI.Xaml.Controls.ListViewBase obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.UI.Xaml.Media.Brush GetAlternateColor(class Microsoft.UI.Xaml.Controls.ListViewBase obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.GetAlternateColor(Microsoft.UI.Xaml.Controls.ListViewBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAlternateColor (obj As ListViewBase) As Brush" />
      <MemberSignature Language="F#" Value="static member GetAlternateColor : Microsoft.UI.Xaml.Controls.ListViewBase -&gt; Microsoft.UI.Xaml.Media.Brush" Usage="CommunityToolkit.WinUI.ListViewExtensions.GetAlternateColor obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.Media.Brush</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to get the associated <see cref="T:Microsoft.UI.Xaml.Media.Brush" /> from</param>
        <summary>
            Gets the alternate <see cref="T:Microsoft.UI.Xaml.Media.Brush" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <returns>The <see cref="T:Microsoft.UI.Xaml.Media.Brush" /> associated with the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlternateItemTemplate">
      <MemberSignature Language="C#" Value="public static Microsoft.UI.Xaml.DataTemplate GetAlternateItemTemplate (Microsoft.UI.Xaml.Controls.ListViewBase obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.UI.Xaml.DataTemplate GetAlternateItemTemplate(class Microsoft.UI.Xaml.Controls.ListViewBase obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.GetAlternateItemTemplate(Microsoft.UI.Xaml.Controls.ListViewBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAlternateItemTemplate (obj As ListViewBase) As DataTemplate" />
      <MemberSignature Language="F#" Value="static member GetAlternateItemTemplate : Microsoft.UI.Xaml.Controls.ListViewBase -&gt; Microsoft.UI.Xaml.DataTemplate" Usage="CommunityToolkit.WinUI.ListViewExtensions.GetAlternateItemTemplate obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to get the associated <see cref="T:Microsoft.UI.Xaml.DataTemplate" /> from</param>
        <summary>
            Gets the <see cref="T:Microsoft.UI.Xaml.DataTemplate" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <returns>The <see cref="T:Microsoft.UI.Xaml.DataTemplate" /> associated with the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCommand">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ICommand GetCommand (Microsoft.UI.Xaml.Controls.ListViewBase obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Input.ICommand GetCommand(class Microsoft.UI.Xaml.Controls.ListViewBase obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.GetCommand(Microsoft.UI.Xaml.Controls.ListViewBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCommand (obj As ListViewBase) As ICommand" />
      <MemberSignature Language="F#" Value="static member GetCommand : Microsoft.UI.Xaml.Controls.ListViewBase -&gt; System.Windows.Input.ICommand" Usage="CommunityToolkit.WinUI.ListViewExtensions.GetCommand obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to get the associated <see cref="T:System.Windows.Input.ICommand" /> from</param>
        <summary>
            Gets the <see cref="T:System.Windows.Input.ICommand" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <returns>The <see cref="T:System.Windows.Input.ICommand" /> associated with the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemContainerStretchDirection">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.WinUI.ItemContainerStretchDirection GetItemContainerStretchDirection (Microsoft.UI.Xaml.Controls.ListViewBase obj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype CommunityToolkit.WinUI.ItemContainerStretchDirection GetItemContainerStretchDirection(class Microsoft.UI.Xaml.Controls.ListViewBase obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.GetItemContainerStretchDirection(Microsoft.UI.Xaml.Controls.ListViewBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemContainerStretchDirection (obj As ListViewBase) As ItemContainerStretchDirection" />
      <MemberSignature Language="F#" Value="static member GetItemContainerStretchDirection : Microsoft.UI.Xaml.Controls.ListViewBase -&gt; CommunityToolkit.WinUI.ItemContainerStretchDirection" Usage="CommunityToolkit.WinUI.ListViewExtensions.GetItemContainerStretchDirection obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.WinUI.ItemContainerStretchDirection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to get the associated <see cref="T:CommunityToolkit.WinUI.ItemContainerStretchDirection" /> from</param>
        <summary>
            Gets the stretch <see cref="T:CommunityToolkit.WinUI.ItemContainerStretchDirection" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <returns>The <see cref="T:CommunityToolkit.WinUI.ItemContainerStretchDirection" /> associated with the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStretchDirection">
      <MemberSignature Language="C#" Value="see GetItemContainerStretchDirection, and SetItemContainerStretchDirection" />
      <MemberSignature Language="ILAsm" Value="see GetItemContainerStretchDirection, and SetItemContainerStretchDirection" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.WinUI.ListViewExtensions.ItemContainerStretchDirection" />
      <MemberSignature Language="VB.NET" Value="see GetItemContainerStretchDirection, and SetItemContainerStretchDirection" />
      <MemberSignature Language="F#" Value="see GetItemContainerStretchDirection, and SetItemContainerStretchDirection" Usage="see GetItemContainerStretchDirection, and SetItemContainerStretchDirection" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStretchDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.UI.Xaml.DependencyProperty ItemContainerStretchDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.UI.Xaml.DependencyProperty ItemContainerStretchDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:CommunityToolkit.WinUI.ListViewExtensions.ItemContainerStretchDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly ItemContainerStretchDirectionProperty As DependencyProperty " />
      <MemberSignature Language="F#" Value=" staticval mutable ItemContainerStretchDirectionProperty : Microsoft.UI.Xaml.DependencyProperty" Usage="CommunityToolkit.WinUI.ListViewExtensions.ItemContainerStretchDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.UI.Xaml.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Attached <see cref="T:Microsoft.UI.Xaml.DependencyProperty" /> for setting the container content stretch direction on the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectAllSafe">
      <MemberSignature Language="C#" Value="public static void SelectAllSafe (this Microsoft.UI.Xaml.Controls.ListViewBase list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SelectAllSafe(class Microsoft.UI.Xaml.Controls.ListViewBase list) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.SelectAllSafe(Microsoft.UI.Xaml.Controls.ListViewBase)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SelectAllSafe (list As ListViewBase)" />
      <MemberSignature Language="F#" Value="static member SelectAllSafe : Microsoft.UI.Xaml.Controls.ListViewBase -&gt; unit" Usage="CommunityToolkit.WinUI.ListViewExtensions.SelectAllSafe list" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="Microsoft.UI.Xaml.Controls.ListViewBase" RefType="this" />
      </Parameters>
      <Docs>
        <param name="list">
          <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" />
        </param>
        <summary>
            Selects all items in the list (or first one), if possible.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlternateColor">
      <MemberSignature Language="C#" Value="public static void SetAlternateColor (Microsoft.UI.Xaml.Controls.ListViewBase obj, Microsoft.UI.Xaml.Media.Brush value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAlternateColor(class Microsoft.UI.Xaml.Controls.ListViewBase obj, class Microsoft.UI.Xaml.Media.Brush value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.SetAlternateColor(Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.Media.Brush)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAlternateColor (obj As ListViewBase, value As Brush)" />
      <MemberSignature Language="F#" Value="static member SetAlternateColor : Microsoft.UI.Xaml.Controls.ListViewBase * Microsoft.UI.Xaml.Media.Brush -&gt; unit" Usage="CommunityToolkit.WinUI.ListViewExtensions.SetAlternateColor (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
        <Parameter Name="value" Type="Microsoft.UI.Xaml.Media.Brush" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to associate the <see cref="T:Microsoft.UI.Xaml.Media.Brush" /> with</param>
        <param name="value">The <see cref="T:Microsoft.UI.Xaml.Media.Brush" /> for binding to the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></param>
        <summary>
            Sets the alternate <see cref="T:Microsoft.UI.Xaml.Media.Brush" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.DependencyObject" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlternateItemTemplate">
      <MemberSignature Language="C#" Value="public static void SetAlternateItemTemplate (Microsoft.UI.Xaml.Controls.ListViewBase obj, Microsoft.UI.Xaml.DataTemplate value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAlternateItemTemplate(class Microsoft.UI.Xaml.Controls.ListViewBase obj, class Microsoft.UI.Xaml.DataTemplate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.SetAlternateItemTemplate(Microsoft.UI.Xaml.Controls.ListViewBase,Microsoft.UI.Xaml.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAlternateItemTemplate (obj As ListViewBase, value As DataTemplate)" />
      <MemberSignature Language="F#" Value="static member SetAlternateItemTemplate : Microsoft.UI.Xaml.Controls.ListViewBase * Microsoft.UI.Xaml.DataTemplate -&gt; unit" Usage="CommunityToolkit.WinUI.ListViewExtensions.SetAlternateItemTemplate (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
        <Parameter Name="value" Type="Microsoft.UI.Xaml.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to associate the <see cref="T:Microsoft.UI.Xaml.DataTemplate" /> with</param>
        <param name="value">The <see cref="T:Microsoft.UI.Xaml.DataTemplate" /> for binding to the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></param>
        <summary>
            Sets the <see cref="T:Microsoft.UI.Xaml.DataTemplate" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCommand">
      <MemberSignature Language="C#" Value="public static void SetCommand (Microsoft.UI.Xaml.Controls.ListViewBase obj, System.Windows.Input.ICommand value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCommand(class Microsoft.UI.Xaml.Controls.ListViewBase obj, class System.Windows.Input.ICommand value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.SetCommand(Microsoft.UI.Xaml.Controls.ListViewBase,System.Windows.Input.ICommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCommand (obj As ListViewBase, value As ICommand)" />
      <MemberSignature Language="F#" Value="static member SetCommand : Microsoft.UI.Xaml.Controls.ListViewBase * System.Windows.Input.ICommand -&gt; unit" Usage="CommunityToolkit.WinUI.ListViewExtensions.SetCommand (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
        <Parameter Name="value" Type="System.Windows.Input.ICommand" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to associate the <see cref="T:System.Windows.Input.ICommand" /> with</param>
        <param name="value">The <see cref="T:System.Windows.Input.ICommand" /> for binding to the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></param>
        <summary>
            Sets the <see cref="T:System.Windows.Input.ICommand" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItemContainerStretchDirection">
      <MemberSignature Language="C#" Value="public static void SetItemContainerStretchDirection (Microsoft.UI.Xaml.Controls.ListViewBase obj, CommunityToolkit.WinUI.ItemContainerStretchDirection value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetItemContainerStretchDirection(class Microsoft.UI.Xaml.Controls.ListViewBase obj, valuetype CommunityToolkit.WinUI.ItemContainerStretchDirection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.SetItemContainerStretchDirection(Microsoft.UI.Xaml.Controls.ListViewBase,CommunityToolkit.WinUI.ItemContainerStretchDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemContainerStretchDirection (obj As ListViewBase, value As ItemContainerStretchDirection)" />
      <MemberSignature Language="F#" Value="static member SetItemContainerStretchDirection : Microsoft.UI.Xaml.Controls.ListViewBase * CommunityToolkit.WinUI.ItemContainerStretchDirection -&gt; unit" Usage="CommunityToolkit.WinUI.ListViewExtensions.SetItemContainerStretchDirection (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Microsoft.UI.Xaml.Controls.ListViewBase" />
        <Parameter Name="value" Type="CommunityToolkit.WinUI.ItemContainerStretchDirection" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /> to associate the <see cref="T:CommunityToolkit.WinUI.ItemContainerStretchDirection" /> with</param>
        <param name="value">The <see cref="T:CommunityToolkit.WinUI.ItemContainerStretchDirection" /> for binding to the <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></param>
        <summary>
            Sets the stretch <see cref="T:CommunityToolkit.WinUI.ItemContainerStretchDirection" /> associated with the specified <see cref="T:Microsoft.UI.Xaml.Controls.ListViewBase" /></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothScrollIntoViewWithIndexAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SmoothScrollIntoViewWithIndexAsync (this Microsoft.UI.Xaml.Controls.ListViewBase listViewBase, int index, CommunityToolkit.WinUI.ScrollItemPlacement itemPlacement = CommunityToolkit.WinUI.ScrollItemPlacement.Default, bool disableAnimation = false, bool scrollIfVisible = true, int additionalHorizontalOffset = 0, int additionalVerticalOffset = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SmoothScrollIntoViewWithIndexAsync(class Microsoft.UI.Xaml.Controls.ListViewBase listViewBase, int32 index, valuetype CommunityToolkit.WinUI.ScrollItemPlacement itemPlacement, bool disableAnimation, bool scrollIfVisible, int32 additionalHorizontalOffset, int32 additionalVerticalOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.SmoothScrollIntoViewWithIndexAsync(Microsoft.UI.Xaml.Controls.ListViewBase,System.Int32,CommunityToolkit.WinUI.ScrollItemPlacement,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SmoothScrollIntoViewWithIndexAsync (listViewBase As ListViewBase, index As Integer, Optional itemPlacement As ScrollItemPlacement = CommunityToolkit.WinUI.ScrollItemPlacement.Default, Optional disableAnimation As Boolean = false, Optional scrollIfVisible As Boolean = true, Optional additionalHorizontalOffset As Integer = 0, Optional additionalVerticalOffset As Integer = 0) As Task" />
      <MemberSignature Language="F#" Value="static member SmoothScrollIntoViewWithIndexAsync : Microsoft.UI.Xaml.Controls.ListViewBase * int * CommunityToolkit.WinUI.ScrollItemPlacement * bool * bool * int * int -&gt; System.Threading.Tasks.Task" Usage="CommunityToolkit.WinUI.ListViewExtensions.SmoothScrollIntoViewWithIndexAsync (listViewBase, index, itemPlacement, disableAnimation, scrollIfVisible, additionalHorizontalOffset, additionalVerticalOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listViewBase" Type="Microsoft.UI.Xaml.Controls.ListViewBase" RefType="this" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="itemPlacement" Type="CommunityToolkit.WinUI.ScrollItemPlacement" />
        <Parameter Name="disableAnimation" Type="System.Boolean" />
        <Parameter Name="scrollIfVisible" Type="System.Boolean" />
        <Parameter Name="additionalHorizontalOffset" Type="System.Int32" />
        <Parameter Name="additionalVerticalOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="listViewBase">List to scroll</param>
        <param name="index">The index to bring into view. Index can be negative.</param>
        <param name="itemPlacement">Set the item placement after scrolling</param>
        <param name="disableAnimation">Set true to disable animation</param>
        <param name="scrollIfVisible">Set false to disable scrolling when the corresponding item is in view</param>
        <param name="additionalHorizontalOffset">Adds additional horizontal offset</param>
        <param name="additionalVerticalOffset">Adds additional vertical offset</param>
        <summary>
            Smooth scrolling the list to bring the specified index into view
            </summary>
        <returns>Returns <see cref="T:System.Threading.Tasks.Task" /> that completes after scrolling</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SmoothScrollIntoViewWithItemAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SmoothScrollIntoViewWithItemAsync (this Microsoft.UI.Xaml.Controls.ListViewBase listViewBase, object item, CommunityToolkit.WinUI.ScrollItemPlacement itemPlacement = CommunityToolkit.WinUI.ScrollItemPlacement.Default, bool disableAnimation = false, bool scrollIfVisible = true, int additionalHorizontalOffset = 0, int additionalVerticalOffset = 0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SmoothScrollIntoViewWithItemAsync(class Microsoft.UI.Xaml.Controls.ListViewBase listViewBase, object item, valuetype CommunityToolkit.WinUI.ScrollItemPlacement itemPlacement, bool disableAnimation, bool scrollIfVisible, int32 additionalHorizontalOffset, int32 additionalVerticalOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.WinUI.ListViewExtensions.SmoothScrollIntoViewWithItemAsync(Microsoft.UI.Xaml.Controls.ListViewBase,System.Object,CommunityToolkit.WinUI.ScrollItemPlacement,System.Boolean,System.Boolean,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function SmoothScrollIntoViewWithItemAsync (listViewBase As ListViewBase, item As Object, Optional itemPlacement As ScrollItemPlacement = CommunityToolkit.WinUI.ScrollItemPlacement.Default, Optional disableAnimation As Boolean = false, Optional scrollIfVisible As Boolean = true, Optional additionalHorizontalOffset As Integer = 0, Optional additionalVerticalOffset As Integer = 0) As Task" />
      <MemberSignature Language="F#" Value="static member SmoothScrollIntoViewWithItemAsync : Microsoft.UI.Xaml.Controls.ListViewBase * obj * CommunityToolkit.WinUI.ScrollItemPlacement * bool * bool * int * int -&gt; System.Threading.Tasks.Task" Usage="CommunityToolkit.WinUI.ListViewExtensions.SmoothScrollIntoViewWithItemAsync (listViewBase, item, itemPlacement, disableAnimation, scrollIfVisible, additionalHorizontalOffset, additionalVerticalOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.WinUI.Extensions</AssemblyName>
        <AssemblyVersion>8.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listViewBase" Type="Microsoft.UI.Xaml.Controls.ListViewBase" RefType="this" />
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="itemPlacement" Type="CommunityToolkit.WinUI.ScrollItemPlacement" />
        <Parameter Name="disableAnimation" Type="System.Boolean" />
        <Parameter Name="scrollIfVisible" Type="System.Boolean" />
        <Parameter Name="additionalHorizontalOffset" Type="System.Int32" />
        <Parameter Name="additionalVerticalOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="listViewBase">List to scroll</param>
        <param name="item">The data item to bring into view</param>
        <param name="itemPlacement">Set the item placement after scrolling</param>
        <param name="disableAnimation">Set true to disable animation</param>
        <param name="scrollIfVisible">Set true to disable scrolling when the corresponding item is in view</param>
        <param name="additionalHorizontalOffset">Adds additional horizontal offset</param>
        <param name="additionalVerticalOffset">Adds additional vertical offset</param>
        <summary>
            Smooth scrolling the list to bring the specified data item into view
            </summary>
        <returns>Returns <see cref="T:System.Threading.Tasks.Task" /> that completes after scrolling</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
