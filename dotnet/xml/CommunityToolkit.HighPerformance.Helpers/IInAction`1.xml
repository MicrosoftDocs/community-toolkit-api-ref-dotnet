<Type Name="IInAction&lt;T&gt;" FullName="CommunityToolkit.HighPerformance.Helpers.IInAction&lt;T&gt;">
  <TypeSignature Language="C#" Value="public interface IInAction&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IInAction`1&lt;T&gt;" FrameworkAlternate="dotnet-comm-toolkit-8.4" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.HighPerformance.Helpers.IInAction`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInAction(Of T)" />
  <TypeSignature Language="F#" Value="type IInAction&lt;'T&gt; = interface" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInAction`1&lt;T&gt;" FrameworkAlternate="win-comm-toolkit-dotnet-7.0" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
    <AssemblyVersion>7.0.0.0</AssemblyVersion>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute FrameworkAlternate="dotnet-comm-toolkit-8.4">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">The type of items to process.</typeparam>
    <summary>
            A contract for actions being executed on items of a specific type, with readonly access.
            </summary>
    <remarks>If the <see cref="M:CommunityToolkit.HighPerformance.Helpers.IInAction`1.Invoke(`0@)" /> method is small enough, it is highly recommended to mark it with <see cref="F:System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining" />.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public void Invoke (in T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Invoke([in]!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.HighPerformance.Helpers.IInAction`1.Invoke(`0@|System.Runtime.InteropServices.InAttribute)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invoke (item As T)" />
      <MemberSignature Language="F#" Value="abstract member Invoke : 'T -&gt; unit" Usage="iInAction.Invoke item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.HighPerformance</AssemblyName>
        <AssemblyVersion>7.0.0.0</AssemblyVersion>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-comm-toolkit-8.4">
              <AttributeName Language="C#">[System.Runtime.CompilerServices.IsReadOnly]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IsReadOnly&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="item">The current item to process.</param>
        <summary>
            Executes the action on a specified <typeparamref name="T" /> item.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
