<Type Name="FuncConverter" FullName="CommunityToolkit.Maui.Markup.FuncConverter">
  <TypeSignature Language="C#" Value="public class FuncConverter : CommunityToolkit.Maui.Markup.FuncConverter&lt;object,object,object&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FuncConverter extends CommunityToolkit.Maui.Markup.FuncConverter`3&lt;object, object, object&gt;" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Maui.Markup.FuncConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FuncConverter&#xA;Inherits FuncConverter(Of Object, Object, Object)" />
  <TypeSignature Language="F#" Value="type FuncConverter = class&#xA;    inherit FuncConverter&lt;obj, obj, obj&gt;" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>CommunityToolkit.Maui.Markup.FuncConverter&lt;System.Object,System.Object,System.Object&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TSource">System.Object</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TDest">System.Object</BaseTypeArgument>
      <BaseTypeArgument TypeParamName="TParam">System.Object</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1, 1 })]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1, 1, 1 })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            An <see cref="T:Microsoft.Maui.Controls.IValueConverter" /> implementation that provides the ability to define type safe <c>Func</c> implementations that will be used in the conversion process.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FuncConverter (Func&lt;object?,object&gt;? convert = default, Func&lt;object?,object&gt;? convertBack = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;object, object&gt; convert, class System.Func`2&lt;object, object&gt; convertBack) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.FuncConverter.#ctor(System.Func{System.Object,System.Object},System.Func{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional convert As Func(Of Object, Object) = Nothing, Optional convertBack As Func(Of Object, Object) = Nothing)" />
      <MemberSignature Language="F#" Value="new CommunityToolkit.Maui.Markup.FuncConverter : Func&lt;obj, obj&gt; * Func&lt;obj, obj&gt; -&gt; CommunityToolkit.Maui.Markup.FuncConverter" Usage="new CommunityToolkit.Maui.Markup.FuncConverter (convert, convertBack)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="convert" Type="System.Func&lt;System.Object,System.Object&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="convertBack" Type="System.Func&lt;System.Object,System.Object&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="convert">
            The <see cref="T:System.Func`2" /> implementation that will provide the conversion for the underlying <see cref="M:Microsoft.Maui.Controls.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.
            </param>
        <param name="convertBack">
            The <see cref="T:System.Func`2" /> implementation that will provide the conversion for the underlying <see cref="M:Microsoft.Maui.Controls.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" /> method.
            </param>
        <summary>
            Initializes a new instance of <see cref="T:CommunityToolkit.Maui.Markup.FuncConverter" />.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
