<Type Name="ElementExtensions" FullName="CommunityToolkit.Maui.Markup.ElementExtensions">
  <TypeSignature Language="C#" Value="public static class ElementExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ElementExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Maui.Markup.ElementExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ElementExtensions" />
  <TypeSignature Language="F#" Value="type ElementExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Extension Methods for Elements
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Bold&lt;TFontElement&gt;">
      <MemberSignature Language="C#" Value="public static TFontElement Bold&lt;TFontElement&gt; (this TFontElement fontElement) where TFontElement : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.Controls.Internals.IFontElement;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TFontElement Bold&lt;(class Microsoft.Maui.Controls.BindableObject, class Microsoft.Maui.Controls.Internals.IFontElement) TFontElement&gt;(!!TFontElement fontElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Bold``1(``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Bold(Of TFontElement As {BindableObject, IFontElement}) (fontElement As TFontElement) As TFontElement" />
      <MemberSignature Language="F#" Value="static member Bold : 'FontElement -&gt; 'FontElement (requires 'FontElement :&gt; Microsoft.Maui.Controls.BindableObject and 'FontElement :&gt; Microsoft.Maui.Controls.Internals.IFontElement)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Bold fontElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFontElement</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFontElement">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
            <InterfaceName>Microsoft.Maui.Controls.Internals.IFontElement</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="fontElement" Type="TFontElement" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TFontElement" />
        <param name="fontElement" />
        <summary>
            Sets Bold
            </summary>
        <returns>Font element with added Bold</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Effects&lt;TElement&gt;">
      <MemberSignature Language="C#" Value="public static TElement Effects&lt;TElement&gt; (this TElement element, scoped ReadOnlySpan&lt;Microsoft.Maui.Controls.Effect&gt; effects) where TElement : Microsoft.Maui.Controls.Element;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TElement Effects&lt;(class Microsoft.Maui.Controls.Element) TElement&gt;(!!TElement element, valuetype System.ReadOnlySpan`1&lt;class Microsoft.Maui.Controls.Effect&gt; effects) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Effects``1(``0,System.ReadOnlySpan{Microsoft.Maui.Controls.Effect})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Effects(Of TElement As Element) (element As TElement, effects As ReadOnlySpan(Of Effect)) As TElement" />
      <MemberSignature Language="F#" Value="static member Effects : 'Element * ReadOnlySpan&lt;Microsoft.Maui.Controls.Effect&gt; -&gt; 'Element (requires 'Element :&gt; Microsoft.Maui.Controls.Element)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Effects (element, effects)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TElement</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TElement">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.Element</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="TElement" RefType="this" />
        <Parameter Name="effects" Type="System.ReadOnlySpan&lt;Microsoft.Maui.Controls.Effect&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.ParamCollection]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.ParamCollection&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.ScopedRef]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.ScopedRef&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TElement" />
        <param name="element" />
        <param name="effects" />
        <summary>
            Add Effects
            </summary>
        <returns>Element with added Effects</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Font&lt;TFontElement&gt;">
      <MemberSignature Language="C#" Value="public static TFontElement Font&lt;TFontElement&gt; (this TFontElement fontElement, string? family = default, double? size = default, bool? bold = default, bool? italic = default) where TFontElement : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.Controls.Internals.IFontElement;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TFontElement Font&lt;(class Microsoft.Maui.Controls.BindableObject, class Microsoft.Maui.Controls.Internals.IFontElement) TFontElement&gt;(!!TFontElement fontElement, string family, valuetype System.Nullable`1&lt;float64&gt; size, valuetype System.Nullable`1&lt;bool&gt; bold, valuetype System.Nullable`1&lt;bool&gt; italic) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Font``1(``0,System.String,System.Nullable{System.Double},System.Nullable{System.Boolean},System.Nullable{System.Boolean})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Font(Of TFontElement As {BindableObject, IFontElement}) (fontElement As TFontElement, Optional family As String = Nothing, Optional size As Nullable(Of Double) = Nothing, Optional bold As Nullable(Of Boolean) = Nothing, Optional italic As Nullable(Of Boolean) = Nothing) As TFontElement" />
      <MemberSignature Language="F#" Value="static member Font : 'FontElement * string * Nullable&lt;double&gt; * Nullable&lt;bool&gt; * Nullable&lt;bool&gt; -&gt; 'FontElement (requires 'FontElement :&gt; Microsoft.Maui.Controls.BindableObject and 'FontElement :&gt; Microsoft.Maui.Controls.Internals.IFontElement)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Font (fontElement, family, size, bold, italic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFontElement</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFontElement">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
            <InterfaceName>Microsoft.Maui.Controls.Internals.IFontElement</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="fontElement" Type="TFontElement" RefType="this" />
        <Parameter Name="family" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="size" Type="System.Nullable&lt;System.Double&gt;" />
        <Parameter Name="bold" Type="System.Nullable&lt;System.Boolean&gt;" />
        <Parameter Name="italic" Type="System.Nullable&lt;System.Boolean&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TFontElement" />
        <param name="fontElement" />
        <param name="family" />
        <param name="size" />
        <param name="bold" />
        <param name="italic" />
        <summary>
            Sets Font Properties
            </summary>
        <returns>Font element with added Font properties</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FontSize&lt;TFontElement&gt;">
      <MemberSignature Language="C#" Value="public static TFontElement FontSize&lt;TFontElement&gt; (this TFontElement fontElement, double size) where TFontElement : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.Controls.Internals.IFontElement;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TFontElement FontSize&lt;(class Microsoft.Maui.Controls.BindableObject, class Microsoft.Maui.Controls.Internals.IFontElement) TFontElement&gt;(!!TFontElement fontElement, float64 size) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.FontSize``1(``0,System.Double)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FontSize(Of TFontElement As {BindableObject, IFontElement}) (fontElement As TFontElement, size As Double) As TFontElement" />
      <MemberSignature Language="F#" Value="static member FontSize : 'FontElement * double -&gt; 'FontElement (requires 'FontElement :&gt; Microsoft.Maui.Controls.BindableObject and 'FontElement :&gt; Microsoft.Maui.Controls.Internals.IFontElement)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.FontSize (fontElement, size)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFontElement</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFontElement">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
            <InterfaceName>Microsoft.Maui.Controls.Internals.IFontElement</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="fontElement" Type="TFontElement" RefType="this" />
        <Parameter Name="size" Type="System.Double" />
      </Parameters>
      <Docs>
        <typeparam name="TFontElement" />
        <param name="fontElement" />
        <param name="size" />
        <summary>
            Sets FontSize
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Italic&lt;TFontElement&gt;">
      <MemberSignature Language="C#" Value="public static TFontElement Italic&lt;TFontElement&gt; (this TFontElement fontElement) where TFontElement : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.Controls.Internals.IFontElement;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TFontElement Italic&lt;(class Microsoft.Maui.Controls.BindableObject, class Microsoft.Maui.Controls.Internals.IFontElement) TFontElement&gt;(!!TFontElement fontElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Italic``1(``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Italic(Of TFontElement As {BindableObject, IFontElement}) (fontElement As TFontElement) As TFontElement" />
      <MemberSignature Language="F#" Value="static member Italic : 'FontElement -&gt; 'FontElement (requires 'FontElement :&gt; Microsoft.Maui.Controls.BindableObject and 'FontElement :&gt; Microsoft.Maui.Controls.Internals.IFontElement)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Italic fontElement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TFontElement</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TFontElement">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
            <InterfaceName>Microsoft.Maui.Controls.Internals.IFontElement</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="fontElement" Type="TFontElement" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="TFontElement" />
        <param name="fontElement" />
        <summary>
            Sets Italic
            </summary>
        <returns>Font element with added Italic</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding&lt;TLayout&gt;">
      <MemberSignature Language="C#" Value="public static TLayout Padding&lt;TLayout&gt; (this TLayout paddingElement, Microsoft.Maui.Thickness padding) where TLayout : Microsoft.Maui.Controls.Element, Microsoft.Maui.Controls.IPaddingElement;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TLayout Padding&lt;(class Microsoft.Maui.Controls.Element, class Microsoft.Maui.Controls.IPaddingElement) TLayout&gt;(!!TLayout paddingElement, valuetype Microsoft.Maui.Thickness padding) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Padding``1(``0,Microsoft.Maui.Thickness)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Padding(Of TLayout As {Element, IPaddingElement}) (paddingElement As TLayout, padding As Thickness) As TLayout" />
      <MemberSignature Language="F#" Value="static member Padding : 'Layout * Microsoft.Maui.Thickness -&gt; 'Layout (requires 'Layout :&gt; Microsoft.Maui.Controls.Element and 'Layout :&gt; Microsoft.Maui.Controls.IPaddingElement)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Padding (paddingElement, padding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TLayout</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLayout">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.Element</BaseTypeName>
            <InterfaceName>Microsoft.Maui.Controls.IPaddingElement</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="paddingElement" Type="TLayout" RefType="this" />
        <Parameter Name="padding" Type="Microsoft.Maui.Thickness" />
      </Parameters>
      <Docs>
        <typeparam name="TLayout" />
        <param name="paddingElement" />
        <param name="padding" />
        <summary>
            Set Padding
            </summary>
        <returns>Layout with added Padding</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Padding&lt;TLayout&gt;">
      <MemberSignature Language="C#" Value="public static TLayout Padding&lt;TLayout&gt; (this TLayout paddingElement, double horizontalSize, double verticalSize) where TLayout : Microsoft.Maui.Controls.Element, Microsoft.Maui.Controls.IPaddingElement;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TLayout Padding&lt;(class Microsoft.Maui.Controls.Element, class Microsoft.Maui.Controls.IPaddingElement) TLayout&gt;(!!TLayout paddingElement, float64 horizontalSize, float64 verticalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Padding``1(``0,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Padding(Of TLayout As {Element, IPaddingElement}) (paddingElement As TLayout, horizontalSize As Double, verticalSize As Double) As TLayout" />
      <MemberSignature Language="F#" Value="static member Padding : 'Layout * double * double -&gt; 'Layout (requires 'Layout :&gt; Microsoft.Maui.Controls.Element and 'Layout :&gt; Microsoft.Maui.Controls.IPaddingElement)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Padding (paddingElement, horizontalSize, verticalSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TLayout</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLayout">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.Element</BaseTypeName>
            <InterfaceName>Microsoft.Maui.Controls.IPaddingElement</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="paddingElement" Type="TLayout" RefType="this" />
        <Parameter Name="horizontalSize" Type="System.Double" />
        <Parameter Name="verticalSize" Type="System.Double" />
      </Parameters>
      <Docs>
        <typeparam name="TLayout" />
        <param name="paddingElement" />
        <param name="horizontalSize" />
        <param name="verticalSize" />
        <summary>
            Set Padding
            </summary>
        <returns>Layout with added Padding</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Paddings&lt;TLayout&gt;">
      <MemberSignature Language="C#" Value="public static TLayout Paddings&lt;TLayout&gt; (this TLayout paddingElement, double left = 0, double top = 0, double right = 0, double bottom = 0) where TLayout : Microsoft.Maui.Controls.Element, Microsoft.Maui.Controls.IPaddingElement;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TLayout Paddings&lt;(class Microsoft.Maui.Controls.Element, class Microsoft.Maui.Controls.IPaddingElement) TLayout&gt;(!!TLayout paddingElement, float64 left, float64 top, float64 right, float64 bottom) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Paddings``1(``0,System.Double,System.Double,System.Double,System.Double)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Paddings(Of TLayout As {Element, IPaddingElement}) (paddingElement As TLayout, Optional left As Double = 0, Optional top As Double = 0, Optional right As Double = 0, Optional bottom As Double = 0) As TLayout" />
      <MemberSignature Language="F#" Value="static member Paddings : 'Layout * double * double * double * double -&gt; 'Layout (requires 'Layout :&gt; Microsoft.Maui.Controls.Element and 'Layout :&gt; Microsoft.Maui.Controls.IPaddingElement)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Paddings (paddingElement, left, top, right, bottom)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TLayout</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TLayout">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.Element</BaseTypeName>
            <InterfaceName>Microsoft.Maui.Controls.IPaddingElement</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="paddingElement" Type="TLayout" RefType="this" />
        <Parameter Name="left" Type="System.Double" />
        <Parameter Name="top" Type="System.Double" />
        <Parameter Name="right" Type="System.Double" />
        <Parameter Name="bottom" Type="System.Double" />
      </Parameters>
      <Docs>
        <typeparam name="TLayout" />
        <param name="paddingElement" />
        <param name="left" />
        <param name="top" />
        <param name="right" />
        <param name="bottom" />
        <summary>
            Set Padding
            </summary>
        <returns>Layout with added Padding</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveDynamicResources&lt;TBindable&gt;">
      <MemberSignature Language="C#" Value="public static TBindable RemoveDynamicResources&lt;TBindable&gt; (this TBindable bindable, scoped ReadOnlySpan&lt;Microsoft.Maui.Controls.BindableProperty&gt; properties) where TBindable : Microsoft.Maui.Controls.BindableObject;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBindable RemoveDynamicResources&lt;(class Microsoft.Maui.Controls.BindableObject) TBindable&gt;(!!TBindable bindable, valuetype System.ReadOnlySpan`1&lt;class Microsoft.Maui.Controls.BindableProperty&gt; properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.RemoveDynamicResources``1(``0,System.ReadOnlySpan{Microsoft.Maui.Controls.BindableProperty})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function RemoveDynamicResources(Of TBindable As BindableObject) (bindable As TBindable, properties As ReadOnlySpan(Of BindableProperty)) As TBindable" />
      <MemberSignature Language="F#" Value="static member RemoveDynamicResources : 'Bindable * ReadOnlySpan&lt;Microsoft.Maui.Controls.BindableProperty&gt; -&gt; 'Bindable (requires 'Bindable :&gt; Microsoft.Maui.Controls.BindableObject)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.RemoveDynamicResources (bindable, properties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBindable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBindable">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindable" Type="TBindable" RefType="this" />
        <Parameter Name="properties" Type="System.ReadOnlySpan&lt;Microsoft.Maui.Controls.BindableProperty&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 0, 1 })&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.ParamCollection]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.ParamCollection&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.ScopedRef]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.ScopedRef&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TBindable" />
        <param name="bindable" />
        <param name="properties" />
        <summary>
            Remove Dynamic Resource
            </summary>
        <returns>Layout without Dynamic Resource</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text&lt;TBindable&gt;">
      <MemberSignature Language="C#" Value="public static TBindable Text&lt;TBindable&gt; (this TBindable bindable, string? text) where TBindable : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.IText;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBindable Text&lt;(class Microsoft.Maui.Controls.BindableObject, class Microsoft.Maui.IText) TBindable&gt;(!!TBindable bindable, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Text``1(``0,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Text(Of TBindable As {BindableObject, IText}) (bindable As TBindable, text As String) As TBindable" />
      <MemberSignature Language="F#" Value="static member Text : 'Bindable * string -&gt; 'Bindable (requires 'Bindable :&gt; Microsoft.Maui.Controls.BindableObject and 'Bindable :&gt; Microsoft.Maui.IText)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Text (bindable, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBindable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBindable">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
            <InterfaceName>Microsoft.Maui.IText</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindable" Type="TBindable" RefType="this" />
        <Parameter Name="text" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TBindable">
          <see cref="T:Microsoft.Maui.Controls.BindableObject" />
        </typeparam>
        <param name="bindable">Element</param>
        <param name="text" />
        <summary>
            Sets <see cref="P:Microsoft.Maui.IText.Text" /> Property
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text&lt;TBindable&gt;">
      <MemberSignature Language="C#" Value="public static TBindable Text&lt;TBindable&gt; (this TBindable bindable, string? text, Microsoft.Maui.Graphics.Color? textColor) where TBindable : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.IText;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBindable Text&lt;(class Microsoft.Maui.Controls.BindableObject, class Microsoft.Maui.IText) TBindable&gt;(!!TBindable bindable, string text, class Microsoft.Maui.Graphics.Color textColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.Text``1(``0,System.String,Microsoft.Maui.Graphics.Color)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Text(Of TBindable As {BindableObject, IText}) (bindable As TBindable, text As String, textColor As Color) As TBindable" />
      <MemberSignature Language="F#" Value="static member Text : 'Bindable * string * Microsoft.Maui.Graphics.Color -&gt; 'Bindable (requires 'Bindable :&gt; Microsoft.Maui.Controls.BindableObject and 'Bindable :&gt; Microsoft.Maui.IText)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.Text (bindable, text, textColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBindable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBindable">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
            <InterfaceName>Microsoft.Maui.IText</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindable" Type="TBindable" RefType="this" />
        <Parameter Name="text" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="textColor" Type="Microsoft.Maui.Graphics.Color">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TBindable">
          <see cref="T:Microsoft.Maui.Controls.BindableObject" />
        </typeparam>
        <param name="bindable">Element</param>
        <param name="text" />
        <param name="textColor">Text <see cref="T:Microsoft.Maui.Graphics.Color" /></param>
        <summary>
            Sets <see cref="P:Microsoft.Maui.IText.Text" /> Property
            </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextColor&lt;TBindable&gt;">
      <MemberSignature Language="C#" Value="public static TBindable TextColor&lt;TBindable&gt; (this TBindable bindable, Microsoft.Maui.Graphics.Color? textColor) where TBindable : Microsoft.Maui.Controls.BindableObject, Microsoft.Maui.ITextStyle;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TBindable TextColor&lt;(class Microsoft.Maui.Controls.BindableObject, class Microsoft.Maui.ITextStyle) TBindable&gt;(!!TBindable bindable, class Microsoft.Maui.Graphics.Color textColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Maui.Markup.ElementExtensions.TextColor``1(``0,Microsoft.Maui.Graphics.Color)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function TextColor(Of TBindable As {BindableObject, ITextStyle}) (bindable As TBindable, textColor As Color) As TBindable" />
      <MemberSignature Language="F#" Value="static member TextColor : 'Bindable * Microsoft.Maui.Graphics.Color -&gt; 'Bindable (requires 'Bindable :&gt; Microsoft.Maui.Controls.BindableObject and 'Bindable :&gt; Microsoft.Maui.ITextStyle)" Usage="CommunityToolkit.Maui.Markup.ElementExtensions.TextColor (bindable, textColor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Maui.Markup</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TBindable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TBindable">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
          <Constraints>
            <BaseTypeName>Microsoft.Maui.Controls.BindableObject</BaseTypeName>
            <InterfaceName>Microsoft.Maui.ITextStyle</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="bindable" Type="TBindable" RefType="this" />
        <Parameter Name="textColor" Type="Microsoft.Maui.Graphics.Color">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TBindable">
          <see cref="T:Microsoft.Maui.Controls.BindableObject" />
        </typeparam>
        <param name="bindable">Element</param>
        <param name="textColor">Text <see cref="T:Microsoft.Maui.Graphics.Color" /></param>
        <summary>
            Sets <see cref="P:Microsoft.Maui.ITextStyle.TextColor" /> Property
            </summary>
        <returns />
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
