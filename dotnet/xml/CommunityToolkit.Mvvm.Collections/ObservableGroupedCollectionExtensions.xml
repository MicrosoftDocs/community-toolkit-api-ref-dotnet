<Type Name="ObservableGroupedCollectionExtensions" FullName="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions">
  <TypeSignature Language="C#" Value="public static class ObservableGroupedCollectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ObservableGroupedCollectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ObservableGroupedCollectionExtensions" />
  <TypeSignature Language="F#" Value="type ObservableGroupedCollectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The extensions methods to simplify the usage of <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; AddGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, System.Linq.IGrouping&lt;TKey,TElement&gt; grouping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; AddGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt; grouping) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},System.Linq.IGrouping{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), grouping As IGrouping(Of TKey, TElement)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member AddGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * System.Linq.IGrouping&lt;'Key, 'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddGroup (source, grouping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="grouping" Type="System.Linq.IGrouping&lt;TKey,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="grouping">The group of items to add.</param>
        <summary>
            Adds a key-collection <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="grouping" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; AddGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; AddGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member AddGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddGroup (source, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group to add.</param>
        <summary>
            Adds a key-value <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; AddGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key, System.Collections.Generic.IEnumerable&lt;TElement&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; AddGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,System.Collections.Generic.IEnumerable{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey, collection As IEnumerable(Of TElement)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member AddGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key * seq&lt;'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddGroup (source, key, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group where <paramref name="collection" /> will be added.</param>
        <param name="collection">The collection to add.</param>
        <summary>
            Adds a key-collection <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" />, <paramref name="key" /> or <paramref name="collection" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddItem&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; AddItem&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key, TElement item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; AddItem&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key, !!TElement item) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddItem``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AddItem(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey, item As TElement) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member AddItem : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key * 'Element -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.AddItem (source, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TElement" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group where the <paramref name="item" /> should be added.</param>
        <param name="item">The item to add.</param>
        <summary>
            Add <paramref name="item" /> into the first group with <paramref name="key" /> key.
            If the group does not exist, it will be added.
            </summary>
        <returns>The instance of the <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> which will receive the value. It will either be an existing group or a new group.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FirstGroupByKey&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; FirstGroupByKey&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; FirstGroupByKey&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.FirstGroupByKey``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstGroupByKey(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member FirstGroupByKey : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.FirstGroupByKey (source, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group to query.</param>
        <summary>
            Returns the first group with <paramref name="key" /> key.
            </summary>
        <returns>The first group matching <paramref name="key" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The target group does not exist.</exception>
      </Docs>
    </Member>
    <Member MemberName="FirstGroupByKeyOrDefault&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;? FirstGroupByKeyOrDefault&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; FirstGroupByKeyOrDefault&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.FirstGroupByKeyOrDefault``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function FirstGroupByKeyOrDefault(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member FirstGroupByKeyOrDefault : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.FirstGroupByKeyOrDefault (source, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group to query.</param>
        <summary>
            Returns the first group with <paramref name="key" /> key or <see langword="null" /> if not found.
            </summary>
        <returns>The first group matching <paramref name="key" /> or <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, System.Linq.IGrouping&lt;TKey,TElement&gt; grouping);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt; grouping) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},System.Linq.IGrouping{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), grouping As IGrouping(Of TKey, TElement)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * System.Linq.IGrouping&lt;'Key, 'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup (source, grouping)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="grouping" Type="System.Linq.IGrouping&lt;TKey,TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="grouping">The group of items to add.</param>
        <summary>
            Adds a key-value <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="grouping" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup (source, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group to add.</param>
        <summary>
            Adds a key-value <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, System.Linq.IGrouping&lt;TKey,TElement&gt; grouping, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, class System.Linq.IGrouping`2&lt;!!TKey, !!TElement&gt; grouping, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},System.Linq.IGrouping{``0,``1},System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), grouping As IGrouping(Of TKey, TElement), comparer As IComparer(Of TKey)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * System.Linq.IGrouping&lt;'Key, 'Element&gt; * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup (source, grouping, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="grouping" Type="System.Linq.IGrouping&lt;TKey,TElement&gt;" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="grouping">The group of items to add.</param>
        <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> instance to insert <typeparamref name="TKey" /> at the right position.</param>
        <summary>
            Adds a key-value <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" />, <paramref name="grouping" /> or <paramref name="comparer" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey, comparer As IComparer(Of TKey)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup (source, key, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group to add.</param>
        <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> instance to insert <typeparamref name="TKey" /> at the right position.</param>
        <summary>
            Adds a key-value <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" />, <paramref name="key" /> or <paramref name="comparer" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key, System.Collections.Generic.IEnumerable&lt;TElement&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,System.Collections.Generic.IEnumerable{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey, collection As IEnumerable(Of TElement)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key * seq&lt;'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup (source, key, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group where <paramref name="collection" /> will be added.</param>
        <param name="collection">The collection to add.</param>
        <summary>
            Adds a key-value <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" />, <paramref name="key" /> or <paramref name="collection" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertGroup&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertGroup&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key, System.Collections.Generic.IComparer&lt;TKey&gt; comparer, System.Collections.Generic.IEnumerable&lt;TElement&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertGroup&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer, class System.Collections.Generic.IEnumerable`1&lt;!!TElement&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertGroup(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey, comparer As IComparer(Of TKey), collection As IEnumerable(Of TElement)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key * System.Collections.Generic.IComparer&lt;'Key&gt; * seq&lt;'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertGroup (source, key, comparer, collection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group where <paramref name="collection" /> will be added.</param>
        <param name="comparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> instance to insert <typeparamref name="TKey" /> at the right position.</param>
        <param name="collection">The collection to add.</param>
        <summary>
            Adds a key-value <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> item into a target <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" />.
            </summary>
        <returns>The added <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" />, <paramref name="key" />, <paramref name="comparer" /> or <paramref name="collection" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertItem&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key, TElement item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertItem&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key, !!TElement item) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertItem``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,``1)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertItem(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey, item As TElement) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertItem : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key * 'Element -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertItem (source, key, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TElement" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group where to insert <paramref name="item" />.</param>
        <param name="item">The item to add.</param>
        <summary>
            Insert <paramref name="item" /> into the first group with <paramref name="key" /> key.
            </summary>
        <returns>The instance of the <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> which will receive the value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem&lt;TKey,TElement&gt;">
      <MemberSignature Language="C#" Value="public static CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; InsertItem&lt;TKey,TElement&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt; source, TKey key, System.Collections.Generic.IComparer&lt;TKey&gt; keyComparer, TElement item, System.Collections.Generic.IComparer&lt;TElement&gt; itemComparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!!TKey, !!TElement&gt; InsertItem&lt;TKey, TElement&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TElement&gt; source, !!TKey key, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; keyComparer, !!TElement item, class System.Collections.Generic.IComparer`1&lt;!!TElement&gt; itemComparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertItem``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,System.Collections.Generic.IComparer{``0},``1,System.Collections.Generic.IComparer{``1})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function InsertItem(Of TKey, TElement) (source As ObservableGroupedCollection(Of TKey, TElement), key As TKey, keyComparer As IComparer(Of TKey), item As TElement, itemComparer As IComparer(Of TElement)) As ObservableGroup(Of TKey, TElement)" />
      <MemberSignature Language="F#" Value="static member InsertItem : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Element&gt; * 'Key * System.Collections.Generic.IComparer&lt;'Key&gt; * 'Element * System.Collections.Generic.IComparer&lt;'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt;" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.InsertItem (source, key, keyComparer, item, itemComparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TElement" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TElement&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="keyComparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
        <Parameter Name="item" Type="TElement" />
        <Parameter Name="itemComparer" Type="System.Collections.Generic.IComparer&lt;TElement&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TElement">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group where to insert <paramref name="item" />.</param>
        <param name="keyComparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> instance to compare keys.</param>
        <param name="item">The item to add.</param>
        <param name="itemComparer">The <see cref="T:System.Collections.Generic.IComparer`1" /> instance to compare elements.</param>
        <summary>
            Insert <paramref name="item" /> into the first group with <paramref name="key" /> key.
            </summary>
        <returns>The instance of the <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> which will receive the value.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" />, <paramref name="key" />, <paramref name="keyComparer" /> or <paramref name="itemComparer" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveGroup&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void RemoveGroup&lt;TKey,TValue&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TValue&gt; source, TKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGroup&lt;TKey, TValue&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TValue&gt; source, !!TKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.RemoveGroup``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RemoveGroup(Of TKey, TValue) (source As ObservableGroupedCollection(Of TKey, TValue), key As TKey)" />
      <MemberSignature Language="F#" Value="static member RemoveGroup : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Value&gt; * 'Key -&gt; unit" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.RemoveGroup (source, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TValue">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group to remove.</param>
        <summary>
            Remove the first occurrence of the group with <paramref name="key" /> from the <paramref name="source" /> grouped collection.
            It will not do anything if the group does not exist.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void RemoveItem&lt;TKey,TValue&gt; (this CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TValue&gt; source, TKey key, TValue item, bool removeGroupIfEmpty = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveItem&lt;TKey, TValue&gt;(class CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2&lt;!!TKey, !!TValue&gt; source, !!TKey key, !!TValue item, bool removeGroupIfEmpty) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.RemoveItem``2(CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection{``0,``1},``0,``1,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub RemoveItem(Of TKey, TValue) (source As ObservableGroupedCollection(Of TKey, TValue), key As TKey, item As TValue, Optional removeGroupIfEmpty As Boolean = true)" />
      <MemberSignature Language="F#" Value="static member RemoveItem : CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;'Key, 'Value&gt; * 'Key * 'Value * bool -&gt; unit" Usage="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollectionExtensions.RemoveItem (source, key, item, removeGroupIfEmpty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection&lt;TKey,TValue&gt;" RefType="this" />
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="item" Type="TValue" />
        <Parameter Name="removeGroupIfEmpty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">The type of the group key.</typeparam>
        <typeparam name="TValue">The type of the items in the collection.</typeparam>
        <param name="source">The source <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroupedCollection`2" /> instance.</param>
        <param name="key">The key of the group where the <paramref name="item" /> should be removed.</param>
        <param name="item">The item to remove.</param>
        <param name="removeGroupIfEmpty">If true (default value), the group will be removed once it becomes empty.</param>
        <summary>
            Remove the first <paramref name="item" /> from the first group with <paramref name="key" /> from the <paramref name="source" /> grouped collection.
            It will not do anything if the group or the item does not exist.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:CommunityToolkit.Mvvm.ArgumentNullException">Thrown if <paramref name="source" /> or <paramref name="key" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
