<Type Name="ReadOnlyObservableGroup&lt;TKey,TElement&gt;" FullName="CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;TKey,TElement&gt;">
  <TypeSignature Language="C#" Value="public sealed class ReadOnlyObservableGroup&lt;TKey,TElement&gt; : System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;TElement&gt;, CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup&lt;TKey,TElement&gt;, CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup&lt;TKey&gt;, System.Collections.Generic.IEnumerable&lt;TElement&gt;, System.Collections.Generic.IReadOnlyCollection&lt;TElement&gt;, System.Collections.Generic.IReadOnlyList&lt;TElement&gt;, System.Linq.IGrouping&lt;TKey,TElement&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ReadOnlyObservableGroup`2&lt;TKey, TElement&gt; extends System.Collections.ObjectModel.ReadOnlyObservableCollection`1&lt;!TElement&gt; implements class CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup, class CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup`1&lt;!TKey&gt;, class CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup`2&lt;!TKey, !TElement&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TElement&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!TElement&gt;, class System.Collections.Generic.IReadOnlyList`1&lt;!TElement&gt;, class System.Collections.IEnumerable, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged, class System.Linq.IGrouping`2&lt;!TKey, !TElement&gt;" />
  <TypeSignature Language="DocId" Value="T:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ReadOnlyObservableGroup(Of TKey, TElement)&#xA;Inherits ReadOnlyObservableCollection(Of TElement)&#xA;Implements IEnumerable(Of TElement), IGrouping(Of TKey, TElement), IReadOnlyCollection(Of TElement), IReadOnlyList(Of TElement), IReadOnlyObservableGroup(Of TKey), IReadOnlyObservableGroup(Of TKey, TElement)" />
  <TypeSignature Language="F#" Value="type ReadOnlyObservableGroup&lt;'Key, 'Element&gt; = class&#xA;    inherit ReadOnlyObservableCollection&lt;'Element&gt;&#xA;    interface IReadOnlyObservableGroup&lt;'Key, 'Element&gt;&#xA;    interface IReadOnlyObservableGroup&lt;'Key&gt;&#xA;    interface IReadOnlyObservableGroup&#xA;    interface INotifyPropertyChanged&#xA;    interface INotifyCollectionChanged&#xA;    interface IEnumerable&#xA;    interface IReadOnlyList&lt;'Element&gt;&#xA;    interface seq&lt;'Element&gt;&#xA;    interface IReadOnlyCollection&lt;'Element&gt;&#xA;    interface IGrouping&lt;'Key, 'Element&gt;" />
  <AssemblyInfo>
    <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
    <AssemblyVersion>8.4.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TKey" />
    <TypeParameter Name="TElement" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.ReadOnlyObservableCollection&lt;TElement&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">TElement</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup&lt;TKey,TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup&lt;TKey&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyList&lt;TElement&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IGrouping&lt;TKey,TElement&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("Key = {Key}, Count = {Count}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("Key = {Key}, Count = {Count}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TKey">The type of the group key.</typeparam>
    <typeparam name="TElement">The type of elements in the group.</typeparam>
    <summary>
            A read-only observable group. It associates a <see cref="P:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2.Key" /> to a <see cref="T:System.Collections.ObjectModel.ReadOnlyObservableCollection`1" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyObservableGroup (CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt; group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class CommunityToolkit.Mvvm.Collections.ObservableGroup`2&lt;!TKey, !TElement&gt; group) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2.#ctor(CommunityToolkit.Mvvm.Collections.ObservableGroup{`0,`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (group As ObservableGroup(Of TKey, TElement))" />
      <MemberSignature Language="F#" Value="new CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;'Key, 'Element&gt; : CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;'Key, 'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;'Key, 'Element&gt;" Usage="new CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;'Key, 'Element&gt; group" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="group" Type="CommunityToolkit.Mvvm.Collections.ObservableGroup&lt;TKey,TElement&gt;" />
      </Parameters>
      <Docs>
        <param name="group">The <see cref="T:CommunityToolkit.Mvvm.Collections.ObservableGroup`2" /> to wrap.</param>
        <summary>
            Initializes a new instance of the <see cref="T:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="group" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ReadOnlyObservableGroup (TKey key, System.Collections.ObjectModel.ObservableCollection&lt;TElement&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!TKey key, class System.Collections.ObjectModel.ObservableCollection`1&lt;!TElement&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2.#ctor(`0,System.Collections.ObjectModel.ObservableCollection{`1})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As TKey, collection As ObservableCollection(Of TElement))" />
      <MemberSignature Language="F#" Value="new CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;'Key, 'Element&gt; : 'Key * System.Collections.ObjectModel.ObservableCollection&lt;'Element&gt; -&gt; CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;'Key, 'Element&gt;" Usage="new CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;'Key, 'Element&gt; (key, collection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="TKey" />
        <Parameter Name="collection" Type="System.Collections.ObjectModel.ObservableCollection&lt;TElement&gt;" />
      </Parameters>
      <Docs>
        <param name="key">The key of the group.</param>
        <param name="collection">The collection of items to add in the group.</param>
        <summary>
            Initializes a new instance of the <see cref="T:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2" /> class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="key" /> or <paramref name="collection" /> are <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Item">
      <MemberSignature Language="C#" Value="object? CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2.CommunityToolkit#Mvvm#Collections#IReadOnlyObservableGroup#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements IReadOnlyObservableGroup.Item" />
      <MemberSignature Language="F#" Value="member this.CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Item(int) : obj" Usage="CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Key">
      <MemberSignature Language="C#" Value="object CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Key" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2.CommunityToolkit#Mvvm#Collections#IReadOnlyObservableGroup#Key" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Key As Object Implements IReadOnlyObservableGroup.Key" />
      <MemberSignature Language="F#" Value="member this.CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Key : obj" Usage="CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Key" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup.Key</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public TKey Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TKey Key" />
      <MemberSignature Language="DocId" Value="P:CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup`2.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As TKey" />
      <MemberSignature Language="F#" Value="member this.Key : 'Key" Usage="CommunityToolkit.Mvvm.Collections.ReadOnlyObservableGroup&lt;'Key, 'Element&gt;.Key" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:CommunityToolkit.Mvvm.Collections.IReadOnlyObservableGroup`1.Key</InterfaceMember>
        <InterfaceMember>P:System.Linq.IGrouping`2.Key</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CommunityToolkit.Mvvm</AssemblyName>
        <AssemblyVersion>8.4.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
